<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>org.example</groupId>
    <artifactId>jni-hash</artifactId>
    <version>1.0-SNAPSHOT</version>

    <properties>
        <maven.compiler.source>17</maven.compiler.source>
        <maven.compiler.target>17</maven.compiler.target>
    </properties>

    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>native-maven-plugin</artifactId>
                <version>1.0-alpha-11</version>
                <configuration>
                    <javahClassNames>
                        <className>org.example.jnihash.JniHash</className>
                    </javahClassNames>
                    <javahOS>linux</javahOS>
                    <jdkIncludePath>${java.home}/include</jdkIncludePath>
                    <sources>
                        <source>
                            <directory>${project.basedir}/src/native/src</directory>
                            <fileNames>
                                <fileName>org_example_jnihash_JniHash.c</fileName>
                                <fileName>org_example_jnihash_JniShake.c</fileName>
                                <fileName>sha256.c</fileName>
                                <fileName>haraka/org_example_jnihash_haraka_Haraka.c</fileName>
                            </fileNames>
                        </source>
                        <source>
                            <directory>${project.basedir}/src/native/includes</directory>
                        </source>
                    </sources>
                    <!--<compilerProvider>generic-classic</compilerProvider>-->
                    <!--<compilerExecutable>gcc</compilerExecutable>-->
                    <!---<linkerProvider>generic-classic</linkerProvider>-->
                    <compilerProvider>generic</compilerProvider>
                    <compilerStartOptions>
                       <compilerStartOption>-fPIC</compilerStartOption>
                        <compilerStartOption>-O3</compilerStartOption>
                        <compilerStartOption>-maes -mssse3 -msse4.1</compilerStartOption>
                        <compilerStartOption>-I../XKCP/bin/AVX2/libXKCP.a.headers/</compilerStartOption>
                    </compilerStartOptions>
                    <linkerOutputDirectory>target</linkerOutputDirectory>
                    <linkerStartOptions>
                        <linkerStartOption>-shared</linkerStartOption>
                        <linkerStartOption>-lc</linkerStartOption>
                        <linkerStartOption>-fPIC</linkerStartOption>
                        <linkerStartOption>-O3</linkerStartOption>
                    </linkerStartOptions>
                    <linkerEndOptions>
                        <!-- I really don't know why I have to manually list the object files I want to link, but this
                        is the only way that seems to work -->
                        <linkerEndOption>target/objs/org_example_jnihash_JniHash.o</linkerEndOption>
                        <linkerEndOption>target/objs/org_example_jnihash_JniShake.o</linkerEndOption>
                        <linkerEndOption>target/objs/org_example_jnihash_haraka_Haraka.o</linkerEndOption>
                        <linkerEndOption>target/objs/sha256.o</linkerEndOption>
                        <!-- Link OpenSSL -->
                        <linkerEndOption>-lssl</linkerEndOption>
                        <linkerEndOption>-lcrypto</linkerEndOption>
                        <!-- Link XKCP  -->
                        <linkerEndOption>-L../XKCP/bin/AVX2/</linkerEndOption>
                        <linkerEndOption>-lXKCP</linkerEndOption>
                        <linkerEndOption>-z noexecstack</linkerEndOption>
                    </linkerEndOptions>
                    <linkerFinalName>libnative</linkerFinalName>
                    <linkerFinalNameExt>so</linkerFinalNameExt>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.10.1</version>
                <configuration>
                    <compilerArgs>
                        <!-- see https://stackoverflow.com/a/72119291 -->
                        <arg>-h</arg>
                        <arg>${project.basedir}/src/native/include</arg>
                        <arg>-d</arg>
                        <arg>${project.build.outputDirectory}</arg>
                    </compilerArgs>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.0.0-M7</version>
                <configuration>
                    <argLine>-Djava.library.path=./target/</argLine>
                </configuration>
            </plugin>


        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.13.2</version>
            <scope>test</scope>
        </dependency>
        <!-- depends on BouncyCastle because we want to implement its Digest interface -->
        <dependency>
            <groupId>org.bouncycastle</groupId>
            <artifactId>bcprov-jdk15on</artifactId>
            <version>1.70</version>
        </dependency>
        <dependency>
            <groupId>io.netty</groupId>
            <artifactId>netty-all</artifactId>
            <version>4.1.86.Final</version>
        </dependency>

    </dependencies>

</project>