# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc, xmss_parameter = SHA2_10_256, zzz_parallel = true)

# Run progress: 0.00% complete, ETA 07:49:20
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.598 s/op
# Warmup Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.579 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.586 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.579 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.578 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.577 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.579 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.585 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.585 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.586 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.585 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2403
Public key size: 88
0.585 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.582 ±(99.9%) 0.006 s/op [Average]
  (min, avg, max) = (0.577, 0.582, 0.586), stdev = 0.004
  CI (99.9%): [0.577, 0.588] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc, xmss_parameter = SHA2_10_256, zzz_parallel = false)

# Run progress: 0.78% complete, ETA 07:55:49
# Fork: 1 of 1
# Warmup Iteration   1: 2.312 s/op
# Warmup Iteration   2: 2.275 s/op
Iteration   1: 2.275 s/op
Iteration   2: 2.274 s/op
Iteration   3: 2.273 s/op
Iteration   4: 2.272 s/op
Iteration   5: 2.272 s/op
Iteration   6: 2.273 s/op
Iteration   7: 2.273 s/op
Iteration   8: 2.273 s/op
Iteration   9: 2.272 s/op
Iteration  10: 
Private key size: 2403
Public key size: 88
2.272 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  2.273 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (2.272, 2.273, 2.275), stdev = 0.001
  CI (99.9%): [2.271, 2.274] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc, xmss_parameter = SHA2_16_256, zzz_parallel = true)

# Run progress: 1.56% complete, ETA 07:55:19
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
36.969 s/op
# Warmup Iteration   2: Running key generation with 4 segments
37.230 s/op
Iteration   1: Running key generation with 4 segments
37.398 s/op
Iteration   2: Running key generation with 4 segments
37.376 s/op
Iteration   3: Running key generation with 4 segments
37.377 s/op
Iteration   4: Running key generation with 4 segments
37.376 s/op
Iteration   5: Running key generation with 4 segments
37.369 s/op
Iteration   6: Running key generation with 4 segments
37.368 s/op
Iteration   7: Running key generation with 4 segments
37.364 s/op
Iteration   8: Running key generation with 4 segments
37.363 s/op
Iteration   9: Running key generation with 4 segments
37.356 s/op
Iteration  10: Running key generation with 4 segments

Private key size: 3147
Public key size: 88
37.363 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  37.371 ±(99.9%) 0.018 s/op [Average]
  (min, avg, max) = (37.356, 37.371, 37.398), stdev = 0.012
  CI (99.9%): [37.353, 37.389] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc, xmss_parameter = SHA2_16_256, zzz_parallel = false)

# Run progress: 2.34% complete, ETA 10:25:35
# Fork: 1 of 1
# Warmup Iteration   1: 146.234 s/op
# Warmup Iteration   2: 145.980 s/op
Iteration   1: 145.950 s/op
Iteration   2: 146.013 s/op
Iteration   3: 145.976 s/op
Iteration   4: 145.971 s/op
Iteration   5: 145.986 s/op
Iteration   6: 145.973 s/op
Iteration   7: 145.971 s/op
Iteration   8: 145.972 s/op
Iteration   9: 145.974 s/op
Iteration  10: 
Private key size: 3147
Public key size: 88
145.968 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  145.975 ±(99.9%) 0.024 s/op [Average]
  (min, avg, max) = (145.950, 145.975, 146.013), stdev = 0.016
  CI (99.9%): [145.951, 146.000] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc, xmss_parameter = SHA2_10_192, zzz_parallel = true)

# Run progress: 3.13% complete, ETA 22:50:45
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.381 s/op
# Warmup Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.371 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.367 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.369 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.369 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.370 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.369 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.369 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.369 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.369 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.371 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2210
Public key size: 72
0.372 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.369 ±(99.9%) 0.002 s/op [Average]
  (min, avg, max) = (0.367, 0.369, 0.372), stdev = 0.001
  CI (99.9%): [0.368, 0.371] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc, xmss_parameter = SHA2_10_192, zzz_parallel = false)

# Run progress: 3.91% complete, ETA 19:39:10
# Fork: 1 of 1
# Warmup Iteration   1: 1.498 s/op
# Warmup Iteration   2: 1.467 s/op
Iteration   1: 1.467 s/op
Iteration   2: 1.466 s/op
Iteration   3: 1.465 s/op
Iteration   4: 1.465 s/op
Iteration   5: 1.465 s/op
Iteration   6: 1.465 s/op
Iteration   7: 1.465 s/op
Iteration   8: 1.465 s/op
Iteration   9: 1.465 s/op
Iteration  10: 
Private key size: 2210
Public key size: 72
1.465 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  1.466 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (1.465, 1.466, 1.467), stdev = 0.001
  CI (99.9%): [1.465, 1.466] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc, xmss_parameter = SHA2_16_192, zzz_parallel = true)

# Run progress: 4.69% complete, ETA 17:31:18
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
24.264 s/op
# Warmup Iteration   2: Running key generation with 4 segments
24.168 s/op
Iteration   1: Running key generation with 4 segments
24.110 s/op
Iteration   2: Running key generation with 4 segments
24.110 s/op
Iteration   3: Running key generation with 4 segments
24.109 s/op
Iteration   4: Running key generation with 4 segments
24.110 s/op
Iteration   5: Running key generation with 4 segments
24.112 s/op
Iteration   6: Running key generation with 4 segments
24.106 s/op
Iteration   7: Running key generation with 4 segments
24.112 s/op
Iteration   8: Running key generation with 4 segments
24.107 s/op
Iteration   9: Running key generation with 4 segments
24.116 s/op
Iteration  10: Running key generation with 4 segments

Private key size: 2858
Public key size: 72
24.111 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  24.110 ±(99.9%) 0.004 s/op [Average]
  (min, avg, max) = (24.106, 24.110, 24.116), stdev = 0.003
  CI (99.9%): [24.106, 24.115] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc, xmss_parameter = SHA2_16_192, zzz_parallel = false)

# Run progress: 5.47% complete, ETA 16:17:13
# Fork: 1 of 1
# Warmup Iteration   1: 95.263 s/op
# Warmup Iteration   2: 93.677 s/op
Iteration   1: 93.598 s/op
Iteration   2: 93.651 s/op
Iteration   3: 93.597 s/op
Iteration   4: 93.647 s/op
Iteration   5: 93.626 s/op
Iteration   6: 93.620 s/op
Iteration   7: 93.629 s/op
Iteration   8: 93.590 s/op
Iteration   9: 93.626 s/op
Iteration  10: 
Private key size: 2858
Public key size: 72
93.589 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  93.617 ±(99.9%) 0.034 s/op [Average]
  (min, avg, max) = (93.589, 93.617, 93.651), stdev = 0.023
  CI (99.9%): [93.583, 93.652] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc, xmss_parameter = SHAKE256_10_256, zzz_parallel = true)

# Run progress: 6.25% complete, ETA 18:49:20
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.485 s/op
# Warmup Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.468 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.476 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.471 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.471 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.471 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.471 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.471 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.470 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.471 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.470 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2403
Public key size: 88
0.470 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.471 ±(99.9%) 0.002 s/op [Average]
  (min, avg, max) = (0.470, 0.471, 0.476), stdev = 0.002
  CI (99.9%): [0.469, 0.474] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc, xmss_parameter = SHAKE256_10_256, zzz_parallel = false)

# Run progress: 7.03% complete, ETA 17:24:43
# Fork: 1 of 1
# Warmup Iteration   1: 1.784 s/op
# Warmup Iteration   2: 1.754 s/op
Iteration   1: 1.752 s/op
Iteration   2: 1.752 s/op
Iteration   3: 1.751 s/op
Iteration   4: 1.752 s/op
Iteration   5: 1.752 s/op
Iteration   6: 1.752 s/op
Iteration   7: 1.752 s/op
Iteration   8: 1.752 s/op
Iteration   9: 1.752 s/op
Iteration  10: 
Private key size: 2403
Public key size: 88
1.752 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  1.752 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (1.751, 1.752, 1.752), stdev = 0.001
  CI (99.9%): [1.751, 1.752] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc, xmss_parameter = SHAKE256_16_256, zzz_parallel = true)

# Run progress: 7.81% complete, ETA 16:17:55
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
28.641 s/op
# Warmup Iteration   2: Running key generation with 4 segments
28.398 s/op
Iteration   1: Running key generation with 4 segments
28.284 s/op
Iteration   2: Running key generation with 4 segments
28.281 s/op
Iteration   3: Running key generation with 4 segments
28.285 s/op
Iteration   4: Running key generation with 4 segments
28.286 s/op
Iteration   5: Running key generation with 4 segments
28.285 s/op
Iteration   6: Running key generation with 4 segments
28.287 s/op
Iteration   7: Running key generation with 4 segments
28.288 s/op
Iteration   8: Running key generation with 4 segments
28.285 s/op
Iteration   9: Running key generation with 4 segments
28.301 s/op
Iteration  10: Running key generation with 4 segments

Private key size: 3147
Public key size: 88
28.291 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  28.287 ±(99.9%) 0.008 s/op [Average]
  (min, avg, max) = (28.281, 28.287, 28.301), stdev = 0.006
  CI (99.9%): [28.279, 28.296] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc, xmss_parameter = SHAKE256_16_256, zzz_parallel = false)

# Run progress: 8.59% complete, ETA 15:41:47
# Fork: 1 of 1
# Warmup Iteration   1: 111.930 s/op
# Warmup Iteration   2: 111.669 s/op
Iteration   1: 111.690 s/op
Iteration   2: 111.631 s/op
Iteration   3: 111.696 s/op
Iteration   4: 111.655 s/op
Iteration   5: 111.703 s/op
Iteration   6: 111.710 s/op
Iteration   7: 111.706 s/op
Iteration   8: 111.707 s/op
Iteration   9: 111.703 s/op
Iteration  10: 
Private key size: 3147
Public key size: 88
111.695 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  111.690 ±(99.9%) 0.039 s/op [Average]
  (min, avg, max) = (111.631, 111.690, 111.710), stdev = 0.026
  CI (99.9%): [111.651, 111.729] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc, xmss_parameter = SHAKE256_10_192, zzz_parallel = true)

# Run progress: 9.38% complete, ETA 17:51:56
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.335 s/op
# Warmup Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.331 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.326 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.327 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.327 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.328 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.327 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.327 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.327 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.332 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.327 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2210
Public key size: 72
0.327 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.327 ±(99.9%) 0.003 s/op [Average]
  (min, avg, max) = (0.326, 0.327, 0.332), stdev = 0.002
  CI (99.9%): [0.325, 0.330] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc, xmss_parameter = SHAKE256_10_192, zzz_parallel = false)

# Run progress: 10.16% complete, ETA 16:53:51
# Fork: 1 of 1
# Warmup Iteration   1: 1.305 s/op
# Warmup Iteration   2: 1.281 s/op
Iteration   1: 1.281 s/op
Iteration   2: 1.280 s/op
Iteration   3: 1.280 s/op
Iteration   4: 1.280 s/op
Iteration   5: 1.280 s/op
Iteration   6: 1.280 s/op
Iteration   7: 1.280 s/op
Iteration   8: 1.280 s/op
Iteration   9: 1.280 s/op
Iteration  10: 
Private key size: 2210
Public key size: 72
1.280 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  1.280 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (1.280, 1.280, 1.281), stdev = 0.001
  CI (99.9%): [1.280, 1.281] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc, xmss_parameter = SHAKE256_16_192, zzz_parallel = true)

# Run progress: 10.94% complete, ETA 16:03:53
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
22.128 s/op
# Warmup Iteration   2: Running key generation with 4 segments
21.936 s/op
Iteration   1: Running key generation with 4 segments
21.859 s/op
Iteration   2: Running key generation with 4 segments
21.860 s/op
Iteration   3: Running key generation with 4 segments
21.861 s/op
Iteration   4: Running key generation with 4 segments
21.864 s/op
Iteration   5: Running key generation with 4 segments
21.856 s/op
Iteration   6: Running key generation with 4 segments
21.858 s/op
Iteration   7: Running key generation with 4 segments
21.861 s/op
Iteration   8: Running key generation with 4 segments
21.857 s/op
Iteration   9: Running key generation with 4 segments
21.861 s/op
Iteration  10: Running key generation with 4 segments

Private key size: 2858
Public key size: 72
21.861 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  21.860 ±(99.9%) 0.004 s/op [Average]
  (min, avg, max) = (21.856, 21.860, 21.864), stdev = 0.002
  CI (99.9%): [21.856, 21.863] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc, xmss_parameter = SHAKE256_16_192, zzz_parallel = false)

# Run progress: 11.72% complete, ETA 15:24:45
# Fork: 1 of 1
# Warmup Iteration   1: 87.354 s/op
# Warmup Iteration   2: 87.132 s/op
Iteration   1: 87.123 s/op
Iteration   2: 87.119 s/op
Iteration   3: 87.107 s/op
Iteration   4: 87.116 s/op
Iteration   5: 87.117 s/op
Iteration   6: 87.114 s/op
Iteration   7: 87.117 s/op
Iteration   8: 87.101 s/op
Iteration   9: 87.118 s/op
Iteration  10: 
Private key size: 2858
Public key size: 72
87.093 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  87.113 ±(99.9%) 0.014 s/op [Average]
  (min, avg, max) = (87.093, 87.113, 87.123), stdev = 0.009
  CI (99.9%): [87.099, 87.127] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc-optimized, xmss_parameter = SHA2_10_256, zzz_parallel = true)

# Run progress: 12.50% complete, ETA 16:21:17
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.423 s/op
# Warmup Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.396 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.396 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.393 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.396 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.396 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.398 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.395 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.396 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.396 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.395 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2403
Public key size: 88
0.397 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.396 ±(99.9%) 0.002 s/op [Average]
  (min, avg, max) = (0.393, 0.396, 0.398), stdev = 0.001
  CI (99.9%): [0.394, 0.398] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc-optimized, xmss_parameter = SHA2_10_256, zzz_parallel = false)

# Run progress: 13.28% complete, ETA 15:39:32
# Fork: 1 of 1
# Warmup Iteration   1: 1.584 s/op
# Warmup Iteration   2: 1.548 s/op
Iteration   1: 1.548 s/op
Iteration   2: 1.539 s/op
Iteration   3: 1.537 s/op
Iteration   4: 1.536 s/op
Iteration   5: 1.536 s/op
Iteration   6: 1.537 s/op
Iteration   7: 1.536 s/op
Iteration   8: 1.536 s/op
Iteration   9: 1.537 s/op
Iteration  10: 
Private key size: 2403
Public key size: 88
1.536 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  1.538 ±(99.9%) 0.005 s/op [Average]
  (min, avg, max) = (1.536, 1.538, 1.548), stdev = 0.004
  CI (99.9%): [1.533, 1.543] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc-optimized, xmss_parameter = SHA2_16_256, zzz_parallel = true)

# Run progress: 14.06% complete, ETA 15:03:13
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
25.313 s/op
# Warmup Iteration   2: Running key generation with 4 segments
25.048 s/op
Iteration   1: Running key generation with 4 segments
25.122 s/op
Iteration   2: Running key generation with 4 segments
25.130 s/op
Iteration   3: Running key generation with 4 segments
25.132 s/op
Iteration   4: Running key generation with 4 segments
25.139 s/op
Iteration   5: Running key generation with 4 segments
25.134 s/op
Iteration   6: Running key generation with 4 segments
25.154 s/op
Iteration   7: Running key generation with 4 segments
25.138 s/op
Iteration   8: Running key generation with 4 segments
25.151 s/op
Iteration   9: Running key generation with 4 segments
25.142 s/op
Iteration  10: Running key generation with 4 segments

Private key size: 3147
Public key size: 88
25.148 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  25.139 ±(99.9%) 0.016 s/op [Average]
  (min, avg, max) = (25.122, 25.139, 25.154), stdev = 0.010
  CI (99.9%): [25.123, 25.155] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc-optimized, xmss_parameter = SHA2_16_256, zzz_parallel = false)

# Run progress: 14.84% complete, ETA 14:36:46
# Fork: 1 of 1
# Warmup Iteration   1: 98.022 s/op
# Warmup Iteration   2: 97.592 s/op
Iteration   1: 97.578 s/op
Iteration   2: 97.576 s/op
Iteration   3: 97.546 s/op
Iteration   4: 97.546 s/op
Iteration   5: 97.495 s/op
Iteration   6: 97.527 s/op
Iteration   7: 97.531 s/op
Iteration   8: 97.571 s/op
Iteration   9: 97.592 s/op
Iteration  10: 
Private key size: 3147
Public key size: 88
97.525 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  97.549 ±(99.9%) 0.045 s/op [Average]
  (min, avg, max) = (97.495, 97.549, 97.592), stdev = 0.030
  CI (99.9%): [97.503, 97.594] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc-optimized, xmss_parameter = SHA2_10_192, zzz_parallel = true)

# Run progress: 15.63% complete, ETA 15:30:43
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.360 s/op
# Warmup Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.361 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.354 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.356 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.356 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.357 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.356 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.356 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.356 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.356 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.362 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2210
Public key size: 72
0.356 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.357 ±(99.9%) 0.003 s/op [Average]
  (min, avg, max) = (0.354, 0.357, 0.362), stdev = 0.002
  CI (99.9%): [0.353, 0.360] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc-optimized, xmss_parameter = SHA2_10_192, zzz_parallel = false)

# Run progress: 16.41% complete, ETA 14:57:10
# Fork: 1 of 1
# Warmup Iteration   1: 1.435 s/op
# Warmup Iteration   2: 1.409 s/op
Iteration   1: 1.409 s/op
Iteration   2: 1.407 s/op
Iteration   3: 1.408 s/op
Iteration   4: 1.407 s/op
Iteration   5: 1.407 s/op
Iteration   6: 1.407 s/op
Iteration   7: 1.407 s/op
Iteration   8: 1.407 s/op
Iteration   9: 1.407 s/op
Iteration  10: 
Private key size: 2210
Public key size: 72
1.407 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  1.407 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (1.407, 1.407, 1.409), stdev = 0.001
  CI (99.9%): [1.406, 1.408] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc-optimized, xmss_parameter = SHA2_16_192, zzz_parallel = true)

# Run progress: 17.19% complete, ETA 14:27:04
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
22.604 s/op
# Warmup Iteration   2: Running key generation with 4 segments
22.634 s/op
Iteration   1: Running key generation with 4 segments
22.603 s/op
Iteration   2: Running key generation with 4 segments
22.601 s/op
Iteration   3: Running key generation with 4 segments
22.497 s/op
Iteration   4: Running key generation with 4 segments
22.398 s/op
Iteration   5: Running key generation with 4 segments
22.398 s/op
Iteration   6: Running key generation with 4 segments
22.400 s/op
Iteration   7: Running key generation with 4 segments
22.396 s/op
Iteration   8: Running key generation with 4 segments
22.394 s/op
Iteration   9: Running key generation with 4 segments
22.396 s/op
Iteration  10: Running key generation with 4 segments

Private key size: 2858
Public key size: 72
22.395 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  22.448 ±(99.9%) 0.132 s/op [Average]
  (min, avg, max) = (22.394, 22.448, 22.603), stdev = 0.087
  CI (99.9%): [22.316, 22.580] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc-optimized, xmss_parameter = SHA2_16_192, zzz_parallel = false)

# Run progress: 17.97% complete, ETA 14:02:05
# Fork: 1 of 1
# Warmup Iteration   1: 89.947 s/op
# Warmup Iteration   2: 89.692 s/op
Iteration   1: 89.657 s/op
Iteration   2: 89.679 s/op
Iteration   3: 89.665 s/op
Iteration   4: 89.687 s/op
Iteration   5: 89.663 s/op
Iteration   6: 89.677 s/op
Iteration   7: 89.667 s/op
Iteration   8: 89.664 s/op
Iteration   9: 89.662 s/op
Iteration  10: 
Private key size: 2858
Public key size: 72
89.681 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  89.670 ±(99.9%) 0.015 s/op [Average]
  (min, avg, max) = (89.657, 89.670, 89.687), stdev = 0.010
  CI (99.9%): [89.655, 89.686] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc-optimized, xmss_parameter = SHAKE256_10_256, zzz_parallel = true)

# Run progress: 18.75% complete, ETA 14:37:04
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.BCOptimizedHashingProvider.newKHF(BCOptimizedHashingProvider.java:17)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc-optimized, xmss_parameter = SHAKE256_10_256, zzz_parallel = false)

# Run progress: 19.53% complete, ETA 13:53:54
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.BCOptimizedHashingProvider.newKHF(BCOptimizedHashingProvider.java:17)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc-optimized, xmss_parameter = SHAKE256_16_256, zzz_parallel = true)

# Run progress: 20.31% complete, ETA 13:14:03
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.BCOptimizedHashingProvider.newKHF(BCOptimizedHashingProvider.java:17)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc-optimized, xmss_parameter = SHAKE256_16_256, zzz_parallel = false)

# Run progress: 21.09% complete, ETA 12:37:09
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.BCOptimizedHashingProvider.newKHF(BCOptimizedHashingProvider.java:17)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc-optimized, xmss_parameter = SHAKE256_10_192, zzz_parallel = true)

# Run progress: 21.88% complete, ETA 12:02:54
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.BCOptimizedHashingProvider.newKHF(BCOptimizedHashingProvider.java:17)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc-optimized, xmss_parameter = SHAKE256_10_192, zzz_parallel = false)

# Run progress: 22.66% complete, ETA 11:31:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.BCOptimizedHashingProvider.newKHF(BCOptimizedHashingProvider.java:17)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc-optimized, xmss_parameter = SHAKE256_16_192, zzz_parallel = true)

# Run progress: 23.44% complete, ETA 11:01:14
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.BCOptimizedHashingProvider.newKHF(BCOptimizedHashingProvider.java:17)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = bc-optimized, xmss_parameter = SHAKE256_16_192, zzz_parallel = false)

# Run progress: 24.22% complete, ETA 10:33:23
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.BCOptimizedHashingProvider.newKHF(BCOptimizedHashingProvider.java:17)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = corretto, xmss_parameter = SHA2_10_256, zzz_parallel = true)

# Run progress: 25.00% complete, ETA 10:07:17
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.373 s/op
# Warmup Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.368 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.365 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.366 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.366 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.366 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.366 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.368 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.366 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.366 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.376 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2403
Public key size: 88
0.366 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.367 ±(99.9%) 0.005 s/op [Average]
  (min, avg, max) = (0.365, 0.367, 0.376), stdev = 0.003
  CI (99.9%): [0.362, 0.372] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = corretto, xmss_parameter = SHA2_10_256, zzz_parallel = false)

# Run progress: 25.78% complete, ETA 09:53:24
# Fork: 1 of 1
# Warmup Iteration   1: 1.474 s/op
# Warmup Iteration   2: 1.447 s/op
Iteration   1: 1.451 s/op
Iteration   2: 1.444 s/op
Iteration   3: 1.443 s/op
Iteration   4: 1.442 s/op
Iteration   5: 1.441 s/op
Iteration   6: 1.441 s/op
Iteration   7: 1.441 s/op
Iteration   8: 1.441 s/op
Iteration   9: 1.441 s/op
Iteration  10: 
Private key size: 2403
Public key size: 88
1.441 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  1.442 ±(99.9%) 0.005 s/op [Average]
  (min, avg, max) = (1.441, 1.442, 1.451), stdev = 0.003
  CI (99.9%): [1.438, 1.447] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = corretto, xmss_parameter = SHA2_16_256, zzz_parallel = true)

# Run progress: 26.56% complete, ETA 09:40:09
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
23.807 s/op
# Warmup Iteration   2: Running key generation with 4 segments
23.822 s/op
Iteration   1: Running key generation with 4 segments
23.786 s/op
Iteration   2: Running key generation with 4 segments
23.796 s/op
Iteration   3: Running key generation with 4 segments
23.812 s/op
Iteration   4: Running key generation with 4 segments
23.800 s/op
Iteration   5: Running key generation with 4 segments
23.791 s/op
Iteration   6: Running key generation with 4 segments
23.802 s/op
Iteration   7: Running key generation with 4 segments
23.778 s/op
Iteration   8: Running key generation with 4 segments
23.795 s/op
Iteration   9: Running key generation with 4 segments
23.815 s/op
Iteration  10: Running key generation with 4 segments

Private key size: 3147
Public key size: 88
23.809 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  23.798 ±(99.9%) 0.018 s/op [Average]
  (min, avg, max) = (23.778, 23.798, 23.815), stdev = 0.012
  CI (99.9%): [23.781, 23.816] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = corretto, xmss_parameter = SHA2_16_256, zzz_parallel = false)

# Run progress: 27.34% complete, ETA 09:30:15
# Fork: 1 of 1
# Warmup Iteration   1: 93.364 s/op
# Warmup Iteration   2: 93.128 s/op
Iteration   1: 93.062 s/op
Iteration   2: 93.056 s/op
Iteration   3: 93.058 s/op
Iteration   4: 93.035 s/op
Iteration   5: 93.037 s/op
Iteration   6: 93.049 s/op
Iteration   7: 93.051 s/op
Iteration   8: 93.060 s/op
Iteration   9: 93.065 s/op
Iteration  10: 
Private key size: 3147
Public key size: 88
93.064 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  93.054 ±(99.9%) 0.016 s/op [Average]
  (min, avg, max) = (93.035, 93.054, 93.065), stdev = 0.011
  CI (99.9%): [93.038, 93.070] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = corretto, xmss_parameter = SHA2_10_192, zzz_parallel = true)

# Run progress: 28.13% complete, ETA 09:56:02
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.253 s/op
# Warmup Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.253 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.244 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.244 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.245 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.247 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.244 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.246 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.246 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.244 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.242 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2210
Public key size: 72
0.243 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.244 ±(99.9%) 0.002 s/op [Average]
  (min, avg, max) = (0.242, 0.244, 0.247), stdev = 0.001
  CI (99.9%): [0.242, 0.247] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = corretto, xmss_parameter = SHA2_10_192, zzz_parallel = false)

# Run progress: 28.91% complete, ETA 09:42:44
# Fork: 1 of 1
# Warmup Iteration   1: 0.976 s/op
# Warmup Iteration   2: 0.954 s/op
Iteration   1: 0.955 s/op
Iteration   2: 0.952 s/op
Iteration   3: 0.953 s/op
Iteration   4: 0.953 s/op
Iteration   5: 0.953 s/op
Iteration   6: 0.953 s/op
Iteration   7: 0.953 s/op
Iteration   8: 0.957 s/op
Iteration   9: 0.953 s/op
Iteration  10: 
Private key size: 2210
Public key size: 72
0.953 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.953 ±(99.9%) 0.002 s/op [Average]
  (min, avg, max) = (0.952, 0.953, 0.957), stdev = 0.001
  CI (99.9%): [0.952, 0.955] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = corretto, xmss_parameter = SHA2_16_192, zzz_parallel = true)

# Run progress: 29.69% complete, ETA 09:29:55
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
15.731 s/op
# Warmup Iteration   2: Running key generation with 4 segments
15.394 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
15.323 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
15.314 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
15.315 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
15.314 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
15.319 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
15.320 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
15.310 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
15.304 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
15.398 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2858
Public key size: 72
15.301 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  15.322 ±(99.9%) 0.042 s/op [Average]
  (min, avg, max) = (15.301, 15.322, 15.398), stdev = 0.028
  CI (99.9%): [15.280, 15.363] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = corretto, xmss_parameter = SHA2_16_192, zzz_parallel = false)

# Run progress: 30.47% complete, ETA 09:21:59
# Fork: 1 of 1
# Warmup Iteration   1: 60.177 s/op
# Warmup Iteration   2: 59.872 s/op
Iteration   1: 59.889 s/op
Iteration   2: 59.852 s/op
Iteration   3: 59.907 s/op
Iteration   4: 59.861 s/op
Iteration   5: 59.814 s/op
Iteration   6: 59.820 s/op
Iteration   7: 59.817 s/op
Iteration   8: 59.835 s/op
Iteration   9: 59.833 s/op
Iteration  10: 
Private key size: 2858
Public key size: 72
59.867 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  59.849 ±(99.9%) 0.048 s/op [Average]
  (min, avg, max) = (59.814, 59.849, 59.907), stdev = 0.032
  CI (99.9%): [59.802, 59.897] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = corretto, xmss_parameter = SHAKE256_10_256, zzz_parallel = true)

# Run progress: 31.25% complete, ETA 09:28:08
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.CorrettoHashingProvider.getMessageDigest(CorrettoHashingProvider.java:78)
	at org.example.bcpqc.experiments.hashing.CorrettoHashingProvider.newKHF(CorrettoHashingProvider.java:30)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = corretto, xmss_parameter = SHAKE256_10_256, zzz_parallel = false)

# Run progress: 32.03% complete, ETA 09:08:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.CorrettoHashingProvider.getMessageDigest(CorrettoHashingProvider.java:78)
	at org.example.bcpqc.experiments.hashing.CorrettoHashingProvider.newKHF(CorrettoHashingProvider.java:30)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = corretto, xmss_parameter = SHAKE256_16_256, zzz_parallel = true)

# Run progress: 32.81% complete, ETA 08:48:49
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.CorrettoHashingProvider.getMessageDigest(CorrettoHashingProvider.java:78)
	at org.example.bcpqc.experiments.hashing.CorrettoHashingProvider.newKHF(CorrettoHashingProvider.java:30)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = corretto, xmss_parameter = SHAKE256_16_256, zzz_parallel = false)

# Run progress: 33.59% complete, ETA 08:30:31
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.CorrettoHashingProvider.getMessageDigest(CorrettoHashingProvider.java:78)
	at org.example.bcpqc.experiments.hashing.CorrettoHashingProvider.newKHF(CorrettoHashingProvider.java:30)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = corretto, xmss_parameter = SHAKE256_10_192, zzz_parallel = true)

# Run progress: 34.38% complete, ETA 08:13:04
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.CorrettoHashingProvider.getMessageDigest(CorrettoHashingProvider.java:78)
	at org.example.bcpqc.experiments.hashing.CorrettoHashingProvider.newKHF(CorrettoHashingProvider.java:30)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = corretto, xmss_parameter = SHAKE256_10_192, zzz_parallel = false)

# Run progress: 35.16% complete, ETA 07:56:22
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.CorrettoHashingProvider.getMessageDigest(CorrettoHashingProvider.java:78)
	at org.example.bcpqc.experiments.hashing.CorrettoHashingProvider.newKHF(CorrettoHashingProvider.java:30)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = corretto, xmss_parameter = SHAKE256_16_192, zzz_parallel = true)

# Run progress: 35.94% complete, ETA 07:40:25
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.CorrettoHashingProvider.getMessageDigest(CorrettoHashingProvider.java:78)
	at org.example.bcpqc.experiments.hashing.CorrettoHashingProvider.newKHF(CorrettoHashingProvider.java:30)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = corretto, xmss_parameter = SHAKE256_16_192, zzz_parallel = false)

# Run progress: 36.72% complete, ETA 07:25:08
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.CorrettoHashingProvider.getMessageDigest(CorrettoHashingProvider.java:78)
	at org.example.bcpqc.experiments.hashing.CorrettoHashingProvider.newKHF(CorrettoHashingProvider.java:30)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni, xmss_parameter = SHA2_10_256, zzz_parallel = true)

# Run progress: 37.50% complete, ETA 07:10:29
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.287 s/op
# Warmup Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.286 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.277 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.281 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.279 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.279 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.282 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.283 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.285 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.284 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.281 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2403
Public key size: 88
0.282 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.281 ±(99.9%) 0.004 s/op [Average]
  (min, avg, max) = (0.277, 0.281, 0.285), stdev = 0.003
  CI (99.9%): [0.277, 0.285] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni, xmss_parameter = SHA2_10_256, zzz_parallel = false)

# Run progress: 38.28% complete, ETA 07:02:24
# Fork: 1 of 1
# Warmup Iteration   1: 1.089 s/op
# Warmup Iteration   2: 1.075 s/op
Iteration   1: 1.065 s/op
Iteration   2: 1.062 s/op
Iteration   3: 1.061 s/op
Iteration   4: 1.062 s/op
Iteration   5: 1.061 s/op
Iteration   6: 1.061 s/op
Iteration   7: 1.061 s/op
Iteration   8: 1.061 s/op
Iteration   9: 1.061 s/op
Iteration  10: 
Private key size: 2403
Public key size: 88
1.061 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  1.062 ±(99.9%) 0.002 s/op [Average]
  (min, avg, max) = (1.061, 1.062, 1.065), stdev = 0.001
  CI (99.9%): [1.060, 1.064] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni, xmss_parameter = SHA2_16_256, zzz_parallel = true)

# Run progress: 39.06% complete, ETA 06:54:31
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
17.863 s/op
# Warmup Iteration   2: Running key generation with 4 segments
17.802 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
18.541 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
17.698 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
17.663 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
17.571 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
17.571 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
17.573 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
17.564 s/op
Iteration   8: Running key generation with 4 segments
20.237 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
18.709 s/op
Iteration  10: Running key generation with 4 segments

Private key size: 3147
Public key size: 88
20.449 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  18.357 ±(99.9%) 1.707 s/op [Average]
  (min, avg, max) = (17.564, 18.357, 20.449), stdev = 1.129
  CI (99.9%): [16.651, 20.064] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni, xmss_parameter = SHA2_16_256, zzz_parallel = false)

# Run progress: 39.84% complete, ETA 06:50:18
# Fork: 1 of 1
# Warmup Iteration   1: 68.004 s/op
# Warmup Iteration   2: 67.754 s/op
Iteration   1: 67.966 s/op
Iteration   2: 67.798 s/op
Iteration   3: 67.773 s/op
Iteration   4: 67.800 s/op
Iteration   5: 67.833 s/op
Iteration   6: 67.775 s/op
Iteration   7: 72.156 s/op
Iteration   8: 78.641 s/op
Iteration   9: 81.292 s/op
Iteration  10: 
Private key size: 3147
Public key size: 88
78.340 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  71.738 ±(99.9%) 8.352 s/op [Average]
  (min, avg, max) = (67.773, 71.738, 81.292), stdev = 5.524
  CI (99.9%): [63.386, 80.089] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni, xmss_parameter = SHA2_10_192, zzz_parallel = true)

# Run progress: 40.63% complete, ETA 06:57:58
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.198 s/op
# Warmup Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.187 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.187 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.189 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.189 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.191 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.190 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.191 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.191 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.193 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.197 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2210
Public key size: 72
0.192 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.191 ±(99.9%) 0.004 s/op [Average]
  (min, avg, max) = (0.187, 0.191, 0.197), stdev = 0.003
  CI (99.9%): [0.187, 0.195] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni, xmss_parameter = SHA2_10_192, zzz_parallel = false)

# Run progress: 41.41% complete, ETA 06:49:55
# Fork: 1 of 1
# Warmup Iteration   1: 0.757 s/op
# Warmup Iteration   2: 0.738 s/op
Iteration   1: 0.737 s/op
Iteration   2: 0.737 s/op
Iteration   3: 0.736 s/op
Iteration   4: 0.736 s/op
Iteration   5: 0.736 s/op
Iteration   6: 0.736 s/op
Iteration   7: 0.736 s/op
Iteration   8: 0.736 s/op
Iteration   9: 0.736 s/op
Iteration  10: 
Private key size: 2210
Public key size: 72
0.736 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.736 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.736, 0.736, 0.737), stdev = 0.001
  CI (99.9%): [0.735, 0.737] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni, xmss_parameter = SHA2_16_192, zzz_parallel = true)

# Run progress: 42.19% complete, ETA 06:42:09
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
12.121 s/op
# Warmup Iteration   2: Running key generation with 4 segments
11.766 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
12.324 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
12.709 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
12.555 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
12.035 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
13.888 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
11.969 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
13.254 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
11.972 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
12.018 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2858
Public key size: 72
12.074 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  12.480 ±(99.9%) 0.977 s/op [Average]
  (min, avg, max) = (11.969, 12.480, 13.888), stdev = 0.646
  CI (99.9%): [11.503, 13.457] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni, xmss_parameter = SHA2_16_192, zzz_parallel = false)

# Run progress: 42.97% complete, ETA 06:35:33
# Fork: 1 of 1
# Warmup Iteration   1: 47.662 s/op
# Warmup Iteration   2: 47.143 s/op
Iteration   1: 47.113 s/op
Iteration   2: 47.156 s/op
Iteration   3: 47.107 s/op
Iteration   4: 47.116 s/op
Iteration   5: 47.101 s/op
Iteration   6: 47.103 s/op
Iteration   7: 47.113 s/op
Iteration   8: 47.157 s/op
Iteration   9: 47.134 s/op
Iteration  10: 
Private key size: 2858
Public key size: 72
47.117 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  47.122 ±(99.9%) 0.031 s/op [Average]
  (min, avg, max) = (47.101, 47.122, 47.157), stdev = 0.021
  CI (99.9%): [47.091, 47.153] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni, xmss_parameter = SHAKE256_10_256, zzz_parallel = true)

# Run progress: 43.75% complete, ETA 06:35:18
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.280 s/op
# Warmup Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.277 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.272 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.271 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.272 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.270 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.272 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.271 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.278 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.276 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.276 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2403
Public key size: 88
0.276 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.273 ±(99.9%) 0.004 s/op [Average]
  (min, avg, max) = (0.270, 0.273, 0.278), stdev = 0.003
  CI (99.9%): [0.269, 0.278] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni, xmss_parameter = SHAKE256_10_256, zzz_parallel = false)

# Run progress: 44.53% complete, ETA 06:27:34
# Fork: 1 of 1
# Warmup Iteration   1: 1.047 s/op
# Warmup Iteration   2: 1.025 s/op
Iteration   1: 1.025 s/op
Iteration   2: 1.025 s/op
Iteration   3: 1.024 s/op
Iteration   4: 1.024 s/op
Iteration   5: 1.024 s/op
Iteration   6: 1.024 s/op
Iteration   7: 1.024 s/op
Iteration   8: 1.024 s/op
Iteration   9: 1.024 s/op
Iteration  10: 
Private key size: 2403
Public key size: 88
1.023 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  1.024 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (1.023, 1.024, 1.025), stdev = 0.001
  CI (99.9%): [1.023, 1.025] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni, xmss_parameter = SHAKE256_16_256, zzz_parallel = true)

# Run progress: 45.31% complete, ETA 06:20:04
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
17.073 s/op
# Warmup Iteration   2: Running key generation with 4 segments
16.505 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
16.414 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
16.428 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
16.581 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
16.621 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
17.528 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
16.394 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
16.392 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
16.398 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
16.408 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 3147
Public key size: 88
16.389 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  16.555 ±(99.9%) 0.532 s/op [Average]
  (min, avg, max) = (16.389, 16.555, 17.528), stdev = 0.352
  CI (99.9%): [16.023, 17.087] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni, xmss_parameter = SHAKE256_16_256, zzz_parallel = false)

# Run progress: 46.09% complete, ETA 06:15:24
# Fork: 1 of 1
# Warmup Iteration   1: 65.714 s/op
# Warmup Iteration   2: 65.451 s/op
Iteration   1: 65.323 s/op
Iteration   2: 65.424 s/op
Iteration   3: 65.327 s/op
Iteration   4: 65.422 s/op
Iteration   5: 65.311 s/op
Iteration   6: 65.322 s/op
Iteration   7: 65.332 s/op
Iteration   8: 65.338 s/op
Iteration   9: 65.326 s/op
Iteration  10: 
Private key size: 3147
Public key size: 88
65.329 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  65.346 ±(99.9%) 0.062 s/op [Average]
  (min, avg, max) = (65.311, 65.346, 65.424), stdev = 0.041
  CI (99.9%): [65.283, 65.408] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni, xmss_parameter = SHAKE256_10_192, zzz_parallel = true)

# Run progress: 46.88% complete, ETA 06:18:37
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.207 s/op
# Warmup Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.209 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.202 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.201 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.201 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.201 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.207 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.203 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.206 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.207 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.206 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2210
Public key size: 72
0.204 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.204 ±(99.9%) 0.004 s/op [Average]
  (min, avg, max) = (0.201, 0.204, 0.207), stdev = 0.002
  CI (99.9%): [0.200, 0.208] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni, xmss_parameter = SHAKE256_10_192, zzz_parallel = false)

# Run progress: 47.66% complete, ETA 06:10:59
# Fork: 1 of 1
# Warmup Iteration   1: 0.794 s/op
# Warmup Iteration   2: 0.778 s/op
Iteration   1: 0.775 s/op
Iteration   2: 0.775 s/op
Iteration   3: 0.775 s/op
Iteration   4: 0.775 s/op
Iteration   5: 0.775 s/op
Iteration   6: 0.775 s/op
Iteration   7: 0.775 s/op
Iteration   8: 0.775 s/op
Iteration   9: 0.775 s/op
Iteration  10: 
Private key size: 2210
Public key size: 72
0.776 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.775 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.775, 0.775, 0.776), stdev = 0.001
  CI (99.9%): [0.774, 0.776] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni, xmss_parameter = SHAKE256_16_192, zzz_parallel = true)

# Run progress: 48.44% complete, ETA 06:03:30
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
12.789 s/op
# Warmup Iteration   2: Running key generation with 4 segments
12.569 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
12.461 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
14.272 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
12.572 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
14.345 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
13.662 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
12.488 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
12.663 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
13.209 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
13.996 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2858
Public key size: 72
14.227 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  13.390 ±(99.9%) 1.207 s/op [Average]
  (min, avg, max) = (12.461, 13.390, 14.345), stdev = 0.799
  CI (99.9%): [12.182, 14.597] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni, xmss_parameter = SHAKE256_16_192, zzz_parallel = false)

# Run progress: 49.22% complete, ETA 05:57:21
# Fork: 1 of 1
# Warmup Iteration   1: 49.812 s/op
# Warmup Iteration   2: 49.567 s/op
Iteration   1: 49.569 s/op
Iteration   2: 49.543 s/op
Iteration   3: 49.585 s/op
Iteration   4: 49.561 s/op
Iteration   5: 49.607 s/op
Iteration   6: 49.569 s/op
Iteration   7: 49.590 s/op
Iteration   8: 49.576 s/op
Iteration   9: 49.570 s/op
Iteration  10: 
Private key size: 2858
Public key size: 72
49.595 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  49.576 ±(99.9%) 0.028 s/op [Average]
  (min, avg, max) = (49.543, 49.576, 49.607), stdev = 0.018
  CI (99.9%): [49.549, 49.604] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-fixed-padding, xmss_parameter = SHA2_10_256, zzz_parallel = true)

# Run progress: 50.00% complete, ETA 05:56:17
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.281 s/op
# Warmup Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.283 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.272 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.275 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.276 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.276 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.276 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.278 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.279 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.279 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.278 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2403
Public key size: 88
0.280 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.277 ±(99.9%) 0.003 s/op [Average]
  (min, avg, max) = (0.272, 0.277, 0.280), stdev = 0.002
  CI (99.9%): [0.273, 0.280] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-fixed-padding, xmss_parameter = SHA2_10_256, zzz_parallel = false)

# Run progress: 50.78% complete, ETA 05:48:54
# Fork: 1 of 1
# Warmup Iteration   1: 1.081 s/op
# Warmup Iteration   2: 1.059 s/op
Iteration   1: 1.059 s/op
Iteration   2: 1.058 s/op
Iteration   3: 1.057 s/op
Iteration   4: 1.059 s/op
Iteration   5: 1.058 s/op
Iteration   6: 1.057 s/op
Iteration   7: 1.057 s/op
Iteration   8: 1.057 s/op
Iteration   9: 1.057 s/op
Iteration  10: 
Private key size: 2403
Public key size: 88
1.057 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  1.058 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (1.057, 1.058, 1.059), stdev = 0.001
  CI (99.9%): [1.056, 1.059] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-fixed-padding, xmss_parameter = SHA2_16_256, zzz_parallel = true)

# Run progress: 51.56% complete, ETA 05:41:39
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
17.422 s/op
# Warmup Iteration   2: Running key generation with 4 segments
17.656 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
17.219 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
17.205 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
17.997 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
17.241 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
18.796 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
17.237 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
17.226 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
17.369 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
17.341 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 3147
Public key size: 88
17.313 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  17.494 ±(99.9%) 0.778 s/op [Average]
  (min, avg, max) = (17.205, 17.494, 18.796), stdev = 0.514
  CI (99.9%): [16.716, 18.272] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-fixed-padding, xmss_parameter = SHA2_16_256, zzz_parallel = false)

# Run progress: 52.34% complete, ETA 05:36:58
# Fork: 1 of 1
# Warmup Iteration   1: 67.678 s/op
# Warmup Iteration   2: 67.392 s/op
Iteration   1: 67.449 s/op
Iteration   2: 67.458 s/op
Iteration   3: 67.346 s/op
Iteration   4: 67.392 s/op
Iteration   5: 67.421 s/op
Iteration   6: 67.435 s/op
Iteration   7: 67.420 s/op
Iteration   8: 67.414 s/op
Iteration   9: 67.399 s/op
Iteration  10: 
Private key size: 3147
Public key size: 88
67.435 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  67.417 ±(99.9%) 0.048 s/op [Average]
  (min, avg, max) = (67.346, 67.417, 67.458), stdev = 0.032
  CI (99.9%): [67.368, 67.465] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-fixed-padding, xmss_parameter = SHA2_10_192, zzz_parallel = true)

# Run progress: 53.13% complete, ETA 05:38:28
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.195 s/op
# Warmup Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.188 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.186 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.186 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.186 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.192 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.188 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.189 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.188 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.193 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.189 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2210
Public key size: 72
0.188 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.189 ±(99.9%) 0.004 s/op [Average]
  (min, avg, max) = (0.186, 0.189, 0.193), stdev = 0.002
  CI (99.9%): [0.185, 0.192] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-fixed-padding, xmss_parameter = SHA2_10_192, zzz_parallel = false)

# Run progress: 53.91% complete, ETA 05:31:10
# Fork: 1 of 1
# Warmup Iteration   1: 0.735 s/op
# Warmup Iteration   2: 0.721 s/op
Iteration   1: 0.719 s/op
Iteration   2: 0.719 s/op
Iteration   3: 0.719 s/op
Iteration   4: 0.719 s/op
Iteration   5: 0.719 s/op
Iteration   6: 0.719 s/op
Iteration   7: 0.719 s/op
Iteration   8: 0.720 s/op
Iteration   9: 0.718 s/op
Iteration  10: 
Private key size: 2210
Public key size: 72
0.718 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.719 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.718, 0.719, 0.720), stdev = 0.001
  CI (99.9%): [0.718, 0.720] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-fixed-padding, xmss_parameter = SHA2_16_192, zzz_parallel = true)

# Run progress: 54.69% complete, ETA 05:23:58
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
12.156 s/op
# Warmup Iteration   2: Running key generation with 4 segments
11.996 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
13.322 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
12.644 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
13.385 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
12.637 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
11.728 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
12.654 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
11.731 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
12.118 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
13.018 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2858
Public key size: 72
11.842 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  12.508 ±(99.9%) 0.950 s/op [Average]
  (min, avg, max) = (11.728, 12.508, 13.385), stdev = 0.629
  CI (99.9%): [11.558, 13.458] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-fixed-padding, xmss_parameter = SHA2_16_192, zzz_parallel = false)

# Run progress: 55.47% complete, ETA 05:17:34
# Fork: 1 of 1
# Warmup Iteration   1: 46.311 s/op
# Warmup Iteration   2: 45.987 s/op
Iteration   1: 45.976 s/op
Iteration   2: 45.963 s/op
Iteration   3: 45.987 s/op
Iteration   4: 45.974 s/op
Iteration   5: 47.785 s/op
Iteration   6: 46.145 s/op
Iteration   7: 46.146 s/op
Iteration   8: 46.136 s/op
Iteration   9: 46.148 s/op
Iteration  10: 
Private key size: 2858
Public key size: 72
46.151 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  46.241 ±(99.9%) 0.830 s/op [Average]
  (min, avg, max) = (45.963, 46.241, 47.785), stdev = 0.549
  CI (99.9%): [45.411, 47.071] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-fixed-padding, xmss_parameter = SHAKE256_10_256, zzz_parallel = true)

# Run progress: 56.25% complete, ETA 05:14:52
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unknown digest
	at org.example.bcpqc.experiments.hashing.JNIFixedPaddingHashingProvider.newKHF(JNIFixedPaddingHashingProvider.java:29)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-fixed-padding, xmss_parameter = SHAKE256_10_256, zzz_parallel = false)

# Run progress: 57.03% complete, ETA 05:05:00
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unknown digest
	at org.example.bcpqc.experiments.hashing.JNIFixedPaddingHashingProvider.newKHF(JNIFixedPaddingHashingProvider.java:29)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-fixed-padding, xmss_parameter = SHAKE256_16_256, zzz_parallel = true)

# Run progress: 57.81% complete, ETA 04:55:25
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unknown digest
	at org.example.bcpqc.experiments.hashing.JNIFixedPaddingHashingProvider.newKHF(JNIFixedPaddingHashingProvider.java:29)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-fixed-padding, xmss_parameter = SHAKE256_16_256, zzz_parallel = false)

# Run progress: 58.59% complete, ETA 04:46:05
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unknown digest
	at org.example.bcpqc.experiments.hashing.JNIFixedPaddingHashingProvider.newKHF(JNIFixedPaddingHashingProvider.java:29)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-fixed-padding, xmss_parameter = SHAKE256_10_192, zzz_parallel = true)

# Run progress: 59.38% complete, ETA 04:36:59
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unknown digest
	at org.example.bcpqc.experiments.hashing.JNIFixedPaddingHashingProvider.newKHF(JNIFixedPaddingHashingProvider.java:29)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-fixed-padding, xmss_parameter = SHAKE256_10_192, zzz_parallel = false)

# Run progress: 60.16% complete, ETA 04:28:08
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unknown digest
	at org.example.bcpqc.experiments.hashing.JNIFixedPaddingHashingProvider.newKHF(JNIFixedPaddingHashingProvider.java:29)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-fixed-padding, xmss_parameter = SHAKE256_16_192, zzz_parallel = true)

# Run progress: 60.94% complete, ETA 04:19:31
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unknown digest
	at org.example.bcpqc.experiments.hashing.JNIFixedPaddingHashingProvider.newKHF(JNIFixedPaddingHashingProvider.java:29)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-fixed-padding, xmss_parameter = SHAKE256_16_192, zzz_parallel = false)

# Run progress: 61.72% complete, ETA 04:11:06
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unknown digest
	at org.example.bcpqc.experiments.hashing.JNIFixedPaddingHashingProvider.newKHF(JNIFixedPaddingHashingProvider.java:29)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-prf-cache, xmss_parameter = SHA2_10_256, zzz_parallel = true)

# Run progress: 62.50% complete, ETA 04:02:54
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.208 s/op
# Warmup Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.207 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.205 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.203 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.203 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.204 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.203 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.204 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.204 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.206 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.206 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2403
Public key size: 88
0.204 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.204 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.203, 0.204, 0.206), stdev = 0.001
  CI (99.9%): [0.203, 0.206] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-prf-cache, xmss_parameter = SHA2_10_256, zzz_parallel = false)

# Run progress: 63.28% complete, ETA 03:57:03
# Fork: 1 of 1
# Warmup Iteration   1: 0.792 s/op
# Warmup Iteration   2: 0.775 s/op
Iteration   1: 0.774 s/op
Iteration   2: 0.775 s/op
Iteration   3: 0.774 s/op
Iteration   4: 0.774 s/op
Iteration   5: 0.775 s/op
Iteration   6: 0.774 s/op
Iteration   7: 0.773 s/op
Iteration   8: 0.774 s/op
Iteration   9: 0.774 s/op
Iteration  10: 
Private key size: 2403
Public key size: 88
0.811 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.778 ±(99.9%) 0.018 s/op [Average]
  (min, avg, max) = (0.773, 0.778, 0.811), stdev = 0.012
  CI (99.9%): [0.760, 0.795] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-prf-cache, xmss_parameter = SHA2_16_256, zzz_parallel = true)

# Run progress: 64.06% complete, ETA 03:51:15
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
13.328 s/op
# Warmup Iteration   2: Running key generation with 4 segments
13.397 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
14.104 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
13.937 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
12.926 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
12.870 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
13.195 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
12.867 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
12.913 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
12.862 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
12.869 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 3147
Public key size: 88
12.885 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  13.143 ±(99.9%) 0.718 s/op [Average]
  (min, avg, max) = (12.862, 13.143, 14.104), stdev = 0.475
  CI (99.9%): [12.425, 13.860] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-prf-cache, xmss_parameter = SHA2_16_256, zzz_parallel = false)

# Run progress: 64.84% complete, ETA 03:46:07
# Fork: 1 of 1
# Warmup Iteration   1: 49.679 s/op
# Warmup Iteration   2: 49.445 s/op
Iteration   1: 49.368 s/op
Iteration   2: 49.379 s/op
Iteration   3: 49.323 s/op
Iteration   4: 49.422 s/op
Iteration   5: 49.365 s/op
Iteration   6: 49.357 s/op
Iteration   7: 49.332 s/op
Iteration   8: 49.399 s/op
Iteration   9: 49.350 s/op
Iteration  10: 
Private key size: 3147
Public key size: 88
49.369 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  49.366 ±(99.9%) 0.044 s/op [Average]
  (min, avg, max) = (49.323, 49.366, 49.422), stdev = 0.029
  CI (99.9%): [49.322, 49.411] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-prf-cache, xmss_parameter = SHA2_10_192, zzz_parallel = true)

# Run progress: 65.63% complete, ETA 03:43:38
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unknown digest
	at org.example.bcpqc.experiments.hashing.JNIPrfCachingHashingProvider.newKHF(JNIPrfCachingHashingProvider.java:19)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-prf-cache, xmss_parameter = SHA2_10_192, zzz_parallel = false)

# Run progress: 66.41% complete, ETA 03:35:59
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unknown digest
	at org.example.bcpqc.experiments.hashing.JNIPrfCachingHashingProvider.newKHF(JNIPrfCachingHashingProvider.java:19)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-prf-cache, xmss_parameter = SHA2_16_192, zzz_parallel = true)

# Run progress: 67.19% complete, ETA 03:28:31
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unknown digest
	at org.example.bcpqc.experiments.hashing.JNIPrfCachingHashingProvider.newKHF(JNIPrfCachingHashingProvider.java:19)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-prf-cache, xmss_parameter = SHA2_16_192, zzz_parallel = false)

# Run progress: 67.97% complete, ETA 03:21:13
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unknown digest
	at org.example.bcpqc.experiments.hashing.JNIPrfCachingHashingProvider.newKHF(JNIPrfCachingHashingProvider.java:19)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-prf-cache, xmss_parameter = SHAKE256_10_256, zzz_parallel = true)

# Run progress: 68.75% complete, ETA 03:14:04
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unknown digest
	at org.example.bcpqc.experiments.hashing.JNIPrfCachingHashingProvider.newKHF(JNIPrfCachingHashingProvider.java:19)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-prf-cache, xmss_parameter = SHAKE256_10_256, zzz_parallel = false)

# Run progress: 69.53% complete, ETA 03:07:06
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unknown digest
	at org.example.bcpqc.experiments.hashing.JNIPrfCachingHashingProvider.newKHF(JNIPrfCachingHashingProvider.java:19)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-prf-cache, xmss_parameter = SHAKE256_16_256, zzz_parallel = true)

# Run progress: 70.31% complete, ETA 03:00:17
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unknown digest
	at org.example.bcpqc.experiments.hashing.JNIPrfCachingHashingProvider.newKHF(JNIPrfCachingHashingProvider.java:19)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-prf-cache, xmss_parameter = SHAKE256_16_256, zzz_parallel = false)

# Run progress: 71.09% complete, ETA 02:53:36
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unknown digest
	at org.example.bcpqc.experiments.hashing.JNIPrfCachingHashingProvider.newKHF(JNIPrfCachingHashingProvider.java:19)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-prf-cache, xmss_parameter = SHAKE256_10_192, zzz_parallel = true)

# Run progress: 71.88% complete, ETA 02:47:05
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unknown digest
	at org.example.bcpqc.experiments.hashing.JNIPrfCachingHashingProvider.newKHF(JNIPrfCachingHashingProvider.java:19)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-prf-cache, xmss_parameter = SHAKE256_10_192, zzz_parallel = false)

# Run progress: 72.66% complete, ETA 02:40:41
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unknown digest
	at org.example.bcpqc.experiments.hashing.JNIPrfCachingHashingProvider.newKHF(JNIPrfCachingHashingProvider.java:19)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-prf-cache, xmss_parameter = SHAKE256_16_192, zzz_parallel = true)

# Run progress: 73.44% complete, ETA 02:34:26
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unknown digest
	at org.example.bcpqc.experiments.hashing.JNIPrfCachingHashingProvider.newKHF(JNIPrfCachingHashingProvider.java:19)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = jni-prf-cache, xmss_parameter = SHAKE256_16_192, zzz_parallel = false)

# Run progress: 74.22% complete, ETA 02:28:19
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unknown digest
	at org.example.bcpqc.experiments.hashing.JNIPrfCachingHashingProvider.newKHF(JNIPrfCachingHashingProvider.java:19)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java, xmss_parameter = SHA2_10_256, zzz_parallel = true)

# Run progress: 75.00% complete, ETA 02:22:20
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.330 s/op
# Warmup Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.322 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.314 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.314 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.314 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.314 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.314 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.313 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.314 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.314 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.313 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2403
Public key size: 88
0.313 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.314 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.313, 0.314, 0.314), stdev = 0.001
  CI (99.9%): [0.313, 0.314] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java, xmss_parameter = SHA2_10_256, zzz_parallel = false)

# Run progress: 75.78% complete, ETA 02:17:38
# Fork: 1 of 1
# Warmup Iteration   1: 1.252 s/op
# Warmup Iteration   2: 1.227 s/op
Iteration   1: 1.217 s/op
Iteration   2: 1.215 s/op
Iteration   3: 1.215 s/op
Iteration   4: 1.215 s/op
Iteration   5: 1.214 s/op
Iteration   6: 1.214 s/op
Iteration   7: 1.215 s/op
Iteration   8: 1.215 s/op
Iteration   9: 1.215 s/op
Iteration  10: 
Private key size: 2403
Public key size: 88
1.215 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  1.215 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (1.214, 1.215, 1.217), stdev = 0.001
  CI (99.9%): [1.214, 1.216] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java, xmss_parameter = SHA2_16_256, zzz_parallel = true)

# Run progress: 76.56% complete, ETA 02:13:00
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
20.818 s/op
# Warmup Iteration   2: Running key generation with 4 segments
20.472 s/op
Iteration   1: Running key generation with 4 segments
20.287 s/op
Iteration   2: Running key generation with 4 segments
20.280 s/op
Iteration   3: Running key generation with 4 segments
20.272 s/op
Iteration   4: Running key generation with 4 segments
20.275 s/op
Iteration   5: Running key generation with 4 segments
20.289 s/op
Iteration   6: Running key generation with 4 segments
20.283 s/op
Iteration   7: Running key generation with 4 segments
20.274 s/op
Iteration   8: Running key generation with 4 segments
20.284 s/op
Iteration   9: Running key generation with 4 segments
20.288 s/op
Iteration  10: Running key generation with 4 segments

Private key size: 3147
Public key size: 88
20.279 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  20.281 ±(99.9%) 0.009 s/op [Average]
  (min, avg, max) = (20.272, 20.281, 20.289), stdev = 0.006
  CI (99.9%): [20.272, 20.290] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java, xmss_parameter = SHA2_16_256, zzz_parallel = false)

# Run progress: 77.34% complete, ETA 02:08:28
# Fork: 1 of 1
# Warmup Iteration   1: 77.563 s/op
# Warmup Iteration   2: 78.032 s/op
Iteration   1: 77.944 s/op
Iteration   2: 77.999 s/op
Iteration   3: 77.926 s/op
Iteration   4: 77.999 s/op
Iteration   5: 77.942 s/op
Iteration   6: 77.934 s/op
Iteration   7: 77.968 s/op
Iteration   8: 77.947 s/op
Iteration   9: 77.955 s/op
Iteration  10: 
Private key size: 3147
Public key size: 88
77.947 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  77.956 ±(99.9%) 0.038 s/op [Average]
  (min, avg, max) = (77.926, 77.956, 77.999), stdev = 0.025
  CI (99.9%): [77.918, 77.994] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java, xmss_parameter = SHA2_10_192, zzz_parallel = true)

# Run progress: 78.13% complete, ETA 02:07:09
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.228 s/op
# Warmup Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.219 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.213 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.213 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.213 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.213 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.213 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.213 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.213 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.213 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.214 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2210
Public key size: 72
0.212 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.213 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.212, 0.213, 0.214), stdev = 0.001
  CI (99.9%): [0.212, 0.213] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java, xmss_parameter = SHA2_10_192, zzz_parallel = false)

# Run progress: 78.91% complete, ETA 02:02:23
# Fork: 1 of 1
# Warmup Iteration   1: 0.830 s/op
# Warmup Iteration   2: 0.814 s/op
Iteration   1: 0.811 s/op
Iteration   2: 0.811 s/op
Iteration   3: 0.811 s/op
Iteration   4: 0.811 s/op
Iteration   5: 0.811 s/op
Iteration   6: 0.811 s/op
Iteration   7: 0.811 s/op
Iteration   8: 0.811 s/op
Iteration   9: 0.811 s/op
Iteration  10: 
Private key size: 2210
Public key size: 72
0.811 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.811 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.811, 0.811, 0.811), stdev = 0.001
  CI (99.9%): [0.811, 0.811] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java, xmss_parameter = SHA2_16_192, zzz_parallel = true)

# Run progress: 79.69% complete, ETA 01:57:39
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
13.968 s/op
# Warmup Iteration   2: Running key generation with 4 segments
13.629 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
13.586 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
13.551 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
13.552 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
13.549 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
13.557 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
13.548 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
13.557 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
13.556 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
13.555 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2858
Public key size: 72
13.555 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  13.557 ±(99.9%) 0.016 s/op [Average]
  (min, avg, max) = (13.548, 13.557, 13.586), stdev = 0.011
  CI (99.9%): [13.541, 13.573] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java, xmss_parameter = SHA2_16_192, zzz_parallel = false)

# Run progress: 80.47% complete, ETA 01:53:14
# Fork: 1 of 1
# Warmup Iteration   1: 53.833 s/op
# Warmup Iteration   2: 53.460 s/op
Iteration   1: 53.418 s/op
Iteration   2: 53.486 s/op
Iteration   3: 53.423 s/op
Iteration   4: 53.469 s/op
Iteration   5: 53.417 s/op
Iteration   6: 53.428 s/op
Iteration   7: 53.427 s/op
Iteration   8: 53.421 s/op
Iteration   9: 53.419 s/op
Iteration  10: 
Private key size: 2858
Public key size: 72
53.430 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  53.434 ±(99.9%) 0.036 s/op [Average]
  (min, avg, max) = (53.417, 53.434, 53.486), stdev = 0.024
  CI (99.9%): [53.398, 53.470] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java, xmss_parameter = SHAKE256_10_256, zzz_parallel = true)

# Run progress: 81.25% complete, ETA 01:50:08
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.JavaHashingProvider.getMessageDigest(JavaHashingProvider.java:65)
	at org.example.bcpqc.experiments.hashing.JavaHashingProvider.newKHF(JavaHashingProvider.java:19)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java, xmss_parameter = SHAKE256_10_256, zzz_parallel = false)

# Run progress: 82.03% complete, ETA 01:44:32
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.JavaHashingProvider.getMessageDigest(JavaHashingProvider.java:65)
	at org.example.bcpqc.experiments.hashing.JavaHashingProvider.newKHF(JavaHashingProvider.java:19)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java, xmss_parameter = SHAKE256_16_256, zzz_parallel = true)

# Run progress: 82.81% complete, ETA 01:39:03
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.JavaHashingProvider.getMessageDigest(JavaHashingProvider.java:65)
	at org.example.bcpqc.experiments.hashing.JavaHashingProvider.newKHF(JavaHashingProvider.java:19)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java, xmss_parameter = SHAKE256_16_256, zzz_parallel = false)

# Run progress: 83.59% complete, ETA 01:33:40
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.JavaHashingProvider.getMessageDigest(JavaHashingProvider.java:65)
	at org.example.bcpqc.experiments.hashing.JavaHashingProvider.newKHF(JavaHashingProvider.java:19)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java, xmss_parameter = SHAKE256_10_192, zzz_parallel = true)

# Run progress: 84.38% complete, ETA 01:28:23
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.JavaHashingProvider.getMessageDigest(JavaHashingProvider.java:65)
	at org.example.bcpqc.experiments.hashing.JavaHashingProvider.newKHF(JavaHashingProvider.java:19)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java, xmss_parameter = SHAKE256_10_192, zzz_parallel = false)

# Run progress: 85.16% complete, ETA 01:23:11
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.JavaHashingProvider.getMessageDigest(JavaHashingProvider.java:65)
	at org.example.bcpqc.experiments.hashing.JavaHashingProvider.newKHF(JavaHashingProvider.java:19)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java, xmss_parameter = SHAKE256_16_192, zzz_parallel = true)

# Run progress: 85.94% complete, ETA 01:18:06
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.JavaHashingProvider.getMessageDigest(JavaHashingProvider.java:65)
	at org.example.bcpqc.experiments.hashing.JavaHashingProvider.newKHF(JavaHashingProvider.java:19)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java, xmss_parameter = SHAKE256_16_192, zzz_parallel = false)

# Run progress: 86.72% complete, ETA 01:13:05
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.JavaHashingProvider.getMessageDigest(JavaHashingProvider.java:65)
	at org.example.bcpqc.experiments.hashing.JavaHashingProvider.newKHF(JavaHashingProvider.java:19)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java-optimized, xmss_parameter = SHA2_10_256, zzz_parallel = true)

# Run progress: 87.50% complete, ETA 01:08:11
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.217 s/op
# Warmup Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.211 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.207 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.208 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.208 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.207 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.210 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.208 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.208 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.208 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.209 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2403
Public key size: 88
0.208 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.208 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.207, 0.208, 0.210), stdev = 0.001
  CI (99.9%): [0.207, 0.209] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java-optimized, xmss_parameter = SHA2_10_256, zzz_parallel = false)

# Run progress: 88.28% complete, ETA 01:03:50
# Fork: 1 of 1
# Warmup Iteration   1: 0.835 s/op
# Warmup Iteration   2: 0.815 s/op
Iteration   1: 0.813 s/op
Iteration   2: 0.811 s/op
Iteration   3: 0.811 s/op
Iteration   4: 0.811 s/op
Iteration   5: 0.812 s/op
Iteration   6: 0.811 s/op
Iteration   7: 0.811 s/op
Iteration   8: 0.811 s/op
Iteration   9: 0.811 s/op
Iteration  10: 
Private key size: 2403
Public key size: 88
0.810 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.811 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.810, 0.811, 0.813), stdev = 0.001
  CI (99.9%): [0.810, 0.812] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java-optimized, xmss_parameter = SHA2_16_256, zzz_parallel = true)

# Run progress: 89.06% complete, ETA 00:59:31
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
13.650 s/op
# Warmup Iteration   2: Running key generation with 4 segments
13.253 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
13.260 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
13.275 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
13.288 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
13.298 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
13.279 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
13.275 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
13.276 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
13.284 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
13.282 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 3147
Public key size: 88
13.274 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  13.279 ±(99.9%) 0.015 s/op [Average]
  (min, avg, max) = (13.260, 13.279, 13.298), stdev = 0.010
  CI (99.9%): [13.264, 13.294] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java-optimized, xmss_parameter = SHA2_16_256, zzz_parallel = false)

# Run progress: 89.84% complete, ETA 00:55:20
# Fork: 1 of 1
# Warmup Iteration   1: 52.238 s/op
# Warmup Iteration   2: 51.833 s/op
Iteration   1: 51.873 s/op
Iteration   2: 51.849 s/op
Iteration   3: 51.835 s/op
Iteration   4: 51.855 s/op
Iteration   5: 51.813 s/op
Iteration   6: 51.803 s/op
Iteration   7: 51.827 s/op
Iteration   8: 51.850 s/op
Iteration   9: 51.842 s/op
Iteration  10: 
Private key size: 3147
Public key size: 88
51.844 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  51.839 ±(99.9%) 0.031 s/op [Average]
  (min, avg, max) = (51.803, 51.839, 51.873), stdev = 0.021
  CI (99.9%): [51.808, 51.870] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java-optimized, xmss_parameter = SHA2_10_192, zzz_parallel = true)

# Run progress: 90.63% complete, ETA 00:51:43
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.189 s/op
# Warmup Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.178 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.179 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.180 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.180 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.180 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.180 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.180 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.181 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.180 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
0.180 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2210
Public key size: 72
0.180 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.180 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.179, 0.180, 0.181), stdev = 0.001
  CI (99.9%): [0.179, 0.181] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java-optimized, xmss_parameter = SHA2_10_192, zzz_parallel = false)

# Run progress: 91.41% complete, ETA 00:47:21
# Fork: 1 of 1
# Warmup Iteration   1: 0.719 s/op
# Warmup Iteration   2: 0.705 s/op
Iteration   1: 0.703 s/op
Iteration   2: 0.703 s/op
Iteration   3: 0.703 s/op
Iteration   4: 0.702 s/op
Iteration   5: 0.703 s/op
Iteration   6: 0.702 s/op
Iteration   7: 0.702 s/op
Iteration   8: 0.702 s/op
Iteration   9: 0.703 s/op
Iteration  10: 
Private key size: 2210
Public key size: 72
0.703 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  0.703 ±(99.9%) 0.001 s/op [Average]
  (min, avg, max) = (0.702, 0.703, 0.703), stdev = 0.001
  CI (99.9%): [0.702, 0.703] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java-optimized, xmss_parameter = SHA2_16_192, zzz_parallel = true)

# Run progress: 92.19% complete, ETA 00:43:00
# Fork: 1 of 1
# Warmup Iteration   1: Running key generation with 4 segments
11.592 s/op
# Warmup Iteration   2: Running key generation with 4 segments
11.502 s/op
Iteration   1: Running key generation with 4 segments
Running key generation with 4 segments
11.394 s/op
Iteration   2: Running key generation with 4 segments
Running key generation with 4 segments
11.412 s/op
Iteration   3: Running key generation with 4 segments
Running key generation with 4 segments
11.407 s/op
Iteration   4: Running key generation with 4 segments
Running key generation with 4 segments
11.410 s/op
Iteration   5: Running key generation with 4 segments
Running key generation with 4 segments
11.399 s/op
Iteration   6: Running key generation with 4 segments
Running key generation with 4 segments
11.410 s/op
Iteration   7: Running key generation with 4 segments
Running key generation with 4 segments
11.400 s/op
Iteration   8: Running key generation with 4 segments
Running key generation with 4 segments
11.407 s/op
Iteration   9: Running key generation with 4 segments
Running key generation with 4 segments
11.400 s/op
Iteration  10: Running key generation with 4 segments
Running key generation with 4 segments

Private key size: 2858
Public key size: 72
11.398 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  11.404 ±(99.9%) 0.009 s/op [Average]
  (min, avg, max) = (11.394, 11.404, 11.412), stdev = 0.006
  CI (99.9%): [11.394, 11.413] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java-optimized, xmss_parameter = SHA2_16_192, zzz_parallel = false)

# Run progress: 92.97% complete, ETA 00:38:41
# Fork: 1 of 1
# Warmup Iteration   1: 45.143 s/op
# Warmup Iteration   2: 44.844 s/op
Iteration   1: 44.858 s/op
Iteration   2: 44.853 s/op
Iteration   3: 44.824 s/op
Iteration   4: 44.894 s/op
Iteration   5: 44.854 s/op
Iteration   6: 44.834 s/op
Iteration   7: 44.831 s/op
Iteration   8: 44.847 s/op
Iteration   9: 44.843 s/op
Iteration  10: 
Private key size: 2858
Public key size: 72
44.844 s/op


Result "com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod":
  44.848 ±(99.9%) 0.029 s/op [Average]
  (min, avg, max) = (44.824, 44.848, 44.894), stdev = 0.019
  CI (99.9%): [44.819, 44.878] (assumes normal distribution)


# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java-optimized, xmss_parameter = SHAKE256_10_256, zzz_parallel = true)

# Run progress: 93.75% complete, ETA 00:34:42
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.JavaOptimizedHashingProvider.newKHF(JavaOptimizedHashingProvider.java:20)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java-optimized, xmss_parameter = SHAKE256_10_256, zzz_parallel = false)

# Run progress: 94.53% complete, ETA 00:30:07
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.JavaOptimizedHashingProvider.newKHF(JavaOptimizedHashingProvider.java:20)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java-optimized, xmss_parameter = SHAKE256_16_256, zzz_parallel = true)

# Run progress: 95.31% complete, ETA 00:25:36
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.JavaOptimizedHashingProvider.newKHF(JavaOptimizedHashingProvider.java:20)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java-optimized, xmss_parameter = SHAKE256_16_256, zzz_parallel = false)

# Run progress: 96.09% complete, ETA 00:21:09
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.JavaOptimizedHashingProvider.newKHF(JavaOptimizedHashingProvider.java:20)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java-optimized, xmss_parameter = SHAKE256_10_192, zzz_parallel = true)

# Run progress: 96.88% complete, ETA 00:16:47
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.JavaOptimizedHashingProvider.newKHF(JavaOptimizedHashingProvider.java:20)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java-optimized, xmss_parameter = SHAKE256_10_192, zzz_parallel = false)

# Run progress: 97.66% complete, ETA 00:12:29
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.JavaOptimizedHashingProvider.newKHF(JavaOptimizedHashingProvider.java:20)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java-optimized, xmss_parameter = SHAKE256_16_192, zzz_parallel = true)

# Run progress: 98.44% complete, ETA 00:08:15
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.JavaOptimizedHashingProvider.newKHF(JavaOptimizedHashingProvider.java:20)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# JMH version: 1.34
# VM version: JDK 18-internal, OpenJDK 64-Bit Server VM, 18-internal+0-adhoc.ubuntu.jdk-patch-public-sha
# VM invoker: /home/ubuntu/jdk-patch-public-sha/build/linux-x86_64-server-release/images/jdk/bin/java
# VM options: --add-exports=java.base/sun.security.provider=ALL-UNNAMED --add-opens=java.base/sun.security.provider=ALL-UNNAMED --add-exports=java.base/com.sun.crypto.provider=ALL-UNNAMED --add-opens=java.base/com.sun.crypto.provider=ALL-UNNAMED
# Blackhole mode: compiler (auto-detected, use -Djmh.blackhole.autoDetect=false to disable)
# Warmup: 2 iterations, 10 s each
# Measurement: 10 iterations, 20 s each
# Timeout: 90 min per iteration
# Threads: 1 thread, will synchronize iterations
# Benchmark mode: Average time, time/op
# Benchmark: com.sap.pq_sig_benchmark.keygen.XMSSKeyGenerationBenchmark.testMethod
# Parameters: (hashingProvider = java-optimized, xmss_parameter = SHAKE256_16_192, zzz_parallel = false)

# Run progress: 99.22% complete, ETA 00:04:05
# Fork: 1 of 1
# Warmup Iteration   1: <failure>

java.lang.IllegalArgumentException: Unsupported digest
	at org.example.bcpqc.experiments.hashing.JavaOptimizedHashingProvider.newKHF(JavaOptimizedHashingProvider.java:20)
	at org.example.bcpqc.pqc.crypto.xmss.WOTSPlus.<init>(WOTSPlus.java:48)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSParameters.getWOTSPlus(XMSSParameters.java:166)
	at org.example.bcpqc.pqc.crypto.xmss.BDS.<init>(BDS.java:54)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generatePrivateKey(XMSSKeyPairGenerator.java:66)
	at org.example.bcpqc.pqc.crypto.xmss.XMSSKeyPairGenerator.generateKeyPair(XMSSKeyPairGenerator.java:36)
	at org.example.bcpqc.pqc.jcajce.provider.xmss.XMSSKeyPairGeneratorSpi.generateKeyPair(XMSSKeyPairGeneratorSpi.java:82)
	at com.sap.pq_sig_benchmark.keygen.KeyGenerationBenchmark.testMethod(KeyGenerationBenchmark.java:38)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_avgt_jmhStub(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:190)
	at com.sap.pq_sig_benchmark.keygen.jmh_generated.XMSSKeyGenerationBenchmark_testMethod_jmhTest.testMethod_AverageTime(XMSSKeyGenerationBenchmark_testMethod_jmhTest.java:153)
	at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
	at java.base/java.lang.reflect.Method.invoke(Method.java:577)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:475)
	at org.openjdk.jmh.runner.BenchmarkHandler$BenchmarkTask.call(BenchmarkHandler.java:458)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:833)




# Run complete. Total time: 08:40:36

REMEMBER: The numbers below are just data. To gain reusable insights, you need to follow up on
why the numbers are the way they are. Use profilers (see -prof, -lprof), design factorial
experiments, perform baseline and negative tests that provide experimental control, make sure
the benchmarking environment is safe on JVM/OS/HW level, ask for reviews from the domain experts.
Do not assume the numbers tell you what you want them to tell.

NOTE: Current JVM experimentally supports Compiler Blackholes, and they are in use. Please exercise
extra caution when trusting the results, look into the generated code to check the benchmark still
works, and factor in a small probability of new VM bugs. Additionally, while comparisons between
different JVMs are already problematic, the performance difference caused by different Blackhole
modes can be very significant. Please make sure you use the consistent Blackhole mode for comparisons.

Benchmark                              (hashingProvider)  (xmss_parameter)  (zzz_parallel)  Mode  Cnt    Score    Error  Units
XMSSKeyGenerationBenchmark.testMethod                 bc       SHA2_10_256            true  avgt   10    0.582 ±  0.006   s/op
XMSSKeyGenerationBenchmark.testMethod                 bc       SHA2_10_256           false  avgt   10    2.273 ±  0.001   s/op
XMSSKeyGenerationBenchmark.testMethod                 bc       SHA2_16_256            true  avgt   10   37.371 ±  0.018   s/op
XMSSKeyGenerationBenchmark.testMethod                 bc       SHA2_16_256           false  avgt   10  145.975 ±  0.024   s/op
XMSSKeyGenerationBenchmark.testMethod                 bc       SHA2_10_192            true  avgt   10    0.369 ±  0.002   s/op
XMSSKeyGenerationBenchmark.testMethod                 bc       SHA2_10_192           false  avgt   10    1.466 ±  0.001   s/op
XMSSKeyGenerationBenchmark.testMethod                 bc       SHA2_16_192            true  avgt   10   24.110 ±  0.004   s/op
XMSSKeyGenerationBenchmark.testMethod                 bc       SHA2_16_192           false  avgt   10   93.617 ±  0.034   s/op
XMSSKeyGenerationBenchmark.testMethod                 bc   SHAKE256_10_256            true  avgt   10    0.471 ±  0.002   s/op
XMSSKeyGenerationBenchmark.testMethod                 bc   SHAKE256_10_256           false  avgt   10    1.752 ±  0.001   s/op
XMSSKeyGenerationBenchmark.testMethod                 bc   SHAKE256_16_256            true  avgt   10   28.287 ±  0.008   s/op
XMSSKeyGenerationBenchmark.testMethod                 bc   SHAKE256_16_256           false  avgt   10  111.690 ±  0.039   s/op
XMSSKeyGenerationBenchmark.testMethod                 bc   SHAKE256_10_192            true  avgt   10    0.327 ±  0.003   s/op
XMSSKeyGenerationBenchmark.testMethod                 bc   SHAKE256_10_192           false  avgt   10    1.280 ±  0.001   s/op
XMSSKeyGenerationBenchmark.testMethod                 bc   SHAKE256_16_192            true  avgt   10   21.860 ±  0.004   s/op
XMSSKeyGenerationBenchmark.testMethod                 bc   SHAKE256_16_192           false  avgt   10   87.113 ±  0.014   s/op
XMSSKeyGenerationBenchmark.testMethod       bc-optimized       SHA2_10_256            true  avgt   10    0.396 ±  0.002   s/op
XMSSKeyGenerationBenchmark.testMethod       bc-optimized       SHA2_10_256           false  avgt   10    1.538 ±  0.005   s/op
XMSSKeyGenerationBenchmark.testMethod       bc-optimized       SHA2_16_256            true  avgt   10   25.139 ±  0.016   s/op
XMSSKeyGenerationBenchmark.testMethod       bc-optimized       SHA2_16_256           false  avgt   10   97.549 ±  0.045   s/op
XMSSKeyGenerationBenchmark.testMethod       bc-optimized       SHA2_10_192            true  avgt   10    0.357 ±  0.003   s/op
XMSSKeyGenerationBenchmark.testMethod       bc-optimized       SHA2_10_192           false  avgt   10    1.407 ±  0.001   s/op
XMSSKeyGenerationBenchmark.testMethod       bc-optimized       SHA2_16_192            true  avgt   10   22.448 ±  0.132   s/op
XMSSKeyGenerationBenchmark.testMethod       bc-optimized       SHA2_16_192           false  avgt   10   89.670 ±  0.015   s/op
XMSSKeyGenerationBenchmark.testMethod           corretto       SHA2_10_256            true  avgt   10    0.367 ±  0.005   s/op
XMSSKeyGenerationBenchmark.testMethod           corretto       SHA2_10_256           false  avgt   10    1.442 ±  0.005   s/op
XMSSKeyGenerationBenchmark.testMethod           corretto       SHA2_16_256            true  avgt   10   23.798 ±  0.018   s/op
XMSSKeyGenerationBenchmark.testMethod           corretto       SHA2_16_256           false  avgt   10   93.054 ±  0.016   s/op
XMSSKeyGenerationBenchmark.testMethod           corretto       SHA2_10_192            true  avgt   10    0.244 ±  0.002   s/op
XMSSKeyGenerationBenchmark.testMethod           corretto       SHA2_10_192           false  avgt   10    0.953 ±  0.002   s/op
XMSSKeyGenerationBenchmark.testMethod           corretto       SHA2_16_192            true  avgt   10   15.322 ±  0.042   s/op
XMSSKeyGenerationBenchmark.testMethod           corretto       SHA2_16_192           false  avgt   10   59.849 ±  0.048   s/op
XMSSKeyGenerationBenchmark.testMethod                jni       SHA2_10_256            true  avgt   10    0.281 ±  0.004   s/op
XMSSKeyGenerationBenchmark.testMethod                jni       SHA2_10_256           false  avgt   10    1.062 ±  0.002   s/op
XMSSKeyGenerationBenchmark.testMethod                jni       SHA2_16_256            true  avgt   10   18.357 ±  1.707   s/op
XMSSKeyGenerationBenchmark.testMethod                jni       SHA2_16_256           false  avgt   10   71.738 ±  8.352   s/op
XMSSKeyGenerationBenchmark.testMethod                jni       SHA2_10_192            true  avgt   10    0.191 ±  0.004   s/op
XMSSKeyGenerationBenchmark.testMethod                jni       SHA2_10_192           false  avgt   10    0.736 ±  0.001   s/op
XMSSKeyGenerationBenchmark.testMethod                jni       SHA2_16_192            true  avgt   10   12.480 ±  0.977   s/op
XMSSKeyGenerationBenchmark.testMethod                jni       SHA2_16_192           false  avgt   10   47.122 ±  0.031   s/op
XMSSKeyGenerationBenchmark.testMethod                jni   SHAKE256_10_256            true  avgt   10    0.273 ±  0.004   s/op
XMSSKeyGenerationBenchmark.testMethod                jni   SHAKE256_10_256           false  avgt   10    1.024 ±  0.001   s/op
XMSSKeyGenerationBenchmark.testMethod                jni   SHAKE256_16_256            true  avgt   10   16.555 ±  0.532   s/op
XMSSKeyGenerationBenchmark.testMethod                jni   SHAKE256_16_256           false  avgt   10   65.346 ±  0.062   s/op
XMSSKeyGenerationBenchmark.testMethod                jni   SHAKE256_10_192            true  avgt   10    0.204 ±  0.004   s/op
XMSSKeyGenerationBenchmark.testMethod                jni   SHAKE256_10_192           false  avgt   10    0.775 ±  0.001   s/op
XMSSKeyGenerationBenchmark.testMethod                jni   SHAKE256_16_192            true  avgt   10   13.390 ±  1.207   s/op
XMSSKeyGenerationBenchmark.testMethod                jni   SHAKE256_16_192           false  avgt   10   49.576 ±  0.028   s/op
XMSSKeyGenerationBenchmark.testMethod  jni-fixed-padding       SHA2_10_256            true  avgt   10    0.277 ±  0.003   s/op
XMSSKeyGenerationBenchmark.testMethod  jni-fixed-padding       SHA2_10_256           false  avgt   10    1.058 ±  0.001   s/op
XMSSKeyGenerationBenchmark.testMethod  jni-fixed-padding       SHA2_16_256            true  avgt   10   17.494 ±  0.778   s/op
XMSSKeyGenerationBenchmark.testMethod  jni-fixed-padding       SHA2_16_256           false  avgt   10   67.417 ±  0.048   s/op
XMSSKeyGenerationBenchmark.testMethod  jni-fixed-padding       SHA2_10_192            true  avgt   10    0.189 ±  0.004   s/op
XMSSKeyGenerationBenchmark.testMethod  jni-fixed-padding       SHA2_10_192           false  avgt   10    0.719 ±  0.001   s/op
XMSSKeyGenerationBenchmark.testMethod  jni-fixed-padding       SHA2_16_192            true  avgt   10   12.508 ±  0.950   s/op
XMSSKeyGenerationBenchmark.testMethod  jni-fixed-padding       SHA2_16_192           false  avgt   10   46.241 ±  0.830   s/op
XMSSKeyGenerationBenchmark.testMethod      jni-prf-cache       SHA2_10_256            true  avgt   10    0.204 ±  0.001   s/op
XMSSKeyGenerationBenchmark.testMethod      jni-prf-cache       SHA2_10_256           false  avgt   10    0.778 ±  0.018   s/op
XMSSKeyGenerationBenchmark.testMethod      jni-prf-cache       SHA2_16_256            true  avgt   10   13.143 ±  0.718   s/op
XMSSKeyGenerationBenchmark.testMethod      jni-prf-cache       SHA2_16_256           false  avgt   10   49.366 ±  0.044   s/op
XMSSKeyGenerationBenchmark.testMethod               java       SHA2_10_256            true  avgt   10    0.314 ±  0.001   s/op
XMSSKeyGenerationBenchmark.testMethod               java       SHA2_10_256           false  avgt   10    1.215 ±  0.001   s/op
XMSSKeyGenerationBenchmark.testMethod               java       SHA2_16_256            true  avgt   10   20.281 ±  0.009   s/op
XMSSKeyGenerationBenchmark.testMethod               java       SHA2_16_256           false  avgt   10   77.956 ±  0.038   s/op
XMSSKeyGenerationBenchmark.testMethod               java       SHA2_10_192            true  avgt   10    0.213 ±  0.001   s/op
XMSSKeyGenerationBenchmark.testMethod               java       SHA2_10_192           false  avgt   10    0.811 ±  0.001   s/op
XMSSKeyGenerationBenchmark.testMethod               java       SHA2_16_192            true  avgt   10   13.557 ±  0.016   s/op
XMSSKeyGenerationBenchmark.testMethod               java       SHA2_16_192           false  avgt   10   53.434 ±  0.036   s/op
XMSSKeyGenerationBenchmark.testMethod     java-optimized       SHA2_10_256            true  avgt   10    0.208 ±  0.001   s/op
XMSSKeyGenerationBenchmark.testMethod     java-optimized       SHA2_10_256           false  avgt   10    0.811 ±  0.001   s/op
XMSSKeyGenerationBenchmark.testMethod     java-optimized       SHA2_16_256            true  avgt   10   13.279 ±  0.015   s/op
XMSSKeyGenerationBenchmark.testMethod     java-optimized       SHA2_16_256           false  avgt   10   51.839 ±  0.031   s/op
XMSSKeyGenerationBenchmark.testMethod     java-optimized       SHA2_10_192            true  avgt   10    0.180 ±  0.001   s/op
XMSSKeyGenerationBenchmark.testMethod     java-optimized       SHA2_10_192           false  avgt   10    0.703 ±  0.001   s/op
XMSSKeyGenerationBenchmark.testMethod     java-optimized       SHA2_16_192            true  avgt   10   11.404 ±  0.009   s/op
XMSSKeyGenerationBenchmark.testMethod     java-optimized       SHA2_16_192           false  avgt   10   44.848 ±  0.029   s/op

Benchmark result is saved to jmh-result.csv
